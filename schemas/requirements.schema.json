{
  "type": "object",
  "patternProperties": {
    "^.*$": {
      "allOf": [
        {
          "properties": {
            "expected_mcs": {
              "type": "integer",
              "description": "A rough estimate on the number of mcs. This is only needed for top level requirements."
            },
            "tag": {
              "type": "string",
              "description": "A tag to label all modules nested recursively underneath"
            },
            "state": {
              "type": "string",
              "description": "This creates a StatefulBasket. TODO: Make this message more user friendly?"
            },
            "title": {
              "type": "string",
              "description": "The name of this requirement"
            },
            "description": {
              "type": "string",
              "description": "A more verbose descriptions of the requirement specifics"
            },
            "fulfillment_criteria": {
              "allOf": [
                { "$ref": "#/filters" },
                {
                  "properties": {
                    "at_least_n_mcs": {
                      "type": "number",
                      "description": "At least a certain number of MCs fulfilled"
                    },
                    "at_least_n_modules": {
                      "type": "number",
                      "description": "At least a certain number of modules fulfilled"
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "and": {
                  "description": "All of these baskets must be fulfilled",
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "object", "$ref": "#" }
                    ]
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "or": {
                  "description": "At least one of these baskets must be fulfilled",
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "type": "string" },
                      { "type": "object", "$ref": "#" }
                    ]
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "at_least_n_of": {
                  "description": "At least n of these baskets must be fulfilled",
                  "type": "object",
                  "properties": {
                    "n": {
                      "type": "number"
                    },
                    "baskets": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          { "type": "string" },
                          { "type": "object", "$ref": "#" }
                        ]
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "module": {
                  "description": "Either a single Module or several modules by some kind of filter",
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/filters"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Module code",
                          "type": "string",
                          "pattern": "^(?<prefix>[A-Z]+)(?<codeNumber>\\d)\\d+(?<suffix>[A-Z]*)$"
                        },
                        "mc": {
                          "description": "Number of MCs",
                          "type": "number"
                        },
                        "double_count": {
                          "type": "boolean",
                          "default": false
                        },
                        "required_mcs": {
                          "type": "number"
                        },
                        "early_terminate": {
                          "type": "boolean"
                        },
                        "respawnable": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    }
  },
  "string_array_or_string": {
    "oneOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "filters": {
    "type": "object",
    "properties": {
      "codes": {
        "description": "A set of module codes",
        "type": "array",
        "items": {
          "type": "string",
          "pattern": "^(?<prefix>[A-Z]+)(?<codeNumber>\\d)\\d+(?<suffix>[A-Z]*)$"
        }
      },
      "code_prefix": {
        "description": "Module code prefix",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "code_suffix": {
        "description": "Module code suffix",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "code_pattern": {
        "desription": "Regex filter of module code",
        "type": "string"
      },
      "reject_pattern": {
        "description": "Filter out if regex matches module code",
        "type": "string"
      },
      "level": {
        "description": "Level filter",
        "oneOf": [
          {
            "enum": [1000, 2000, 3000, 4000, 5000, 6000]
          },
          {
            "type": "array",
            "items": {
              "enum": [1000, 2000, 3000, 4000, 5000, 6000]
            }
          }
        ]
      }
    }
  }
}
